private void promptAndCreateFile() {
    TextInputDialog dialog = new TextInputDialog();
    dialog.setTitle("Create File");
    dialog.setHeaderText("Enter the filename to create:");
    Optional<String> result = dialog.showAndWait();

    result.ifPresent(filename -> {
        try {
            File dir = new File(homePath + getUsername());
            if (!dir.exists()) dir.mkdirs();

            File file = new File(homePath + getUsername() + "/" + filename);
            if (file.exists()) {
                showAlert("Warning", "File already exists.");
            } else {
                // Create the file before opening nano (optional, but good for control)
                boolean created = file.createNewFile();
                if (!created) {
                    showAlert("Error", "Failed to create the file.");
                    return;
                }

                String[] cmd = {
                    "x-terminal-emulator", "-e", "bash", "-c",
                    "nano \"" + file.getAbsolutePath() + "\""
                };
                new ProcessBuilder(cmd).start();
            }
        } catch (IOException e) {
            showAlert("Error", "Error creating file: " + e.getMessage());
        }
    });
}
private void promptAndCreateFile() {
    TextInputDialog dialog = new TextInputDialog();
    dialog.setTitle("Create File");
    dialog.setHeaderText("Enter the filename to create:");
    Optional<String> result = dialog.showAndWait();

    result.ifPresent(filename -> {
        try {
            File dir = new File(homePath + getUsername());
            if (!dir.exists()) dir.mkdirs();

            File file = new File(homePath + getUsername() + "/" + filename);
            if (file.exists()) {
                showAlert("Warning", "File already exists.");
            } else {
                // Create the file before opening nano (optional, but good for control)
                boolean created = file.createNewFile();
                if (!created) {
                    showAlert("Error", "Failed to create the file.");
                    return;
                }

                String[] cmd = {
                    "x-terminal-emulator", "-e", "bash", "-c",
                    "nano \"" + file.getAbsolutePath() + "\""
                };
                new ProcessBuilder(cmd).start();
            }
        } catch (IOException e) {
            showAlert("Error", "Error creating file: " + e.getMessage());
        }
    });
}
private void promptAndCreateFile() {
    TextInputDialog dialog = new TextInputDialog();
    dialog.setTitle("Create File");
    dialog.setHeaderText("Enter the filename to create:");
    Optional<String> result = dialog.showAndWait();

    result.ifPresent(filename -> {
        try {
            File dir = new File(homePath + getUsername());
            if (!dir.exists()) dir.mkdirs();

            File file = new File(homePath + getUsername() + "/" + filename);
            if (file.exists()) {
                showAlert("Warning", "File already exists.");
            } else {
                // Create the file before opening nano (optional, but good for control)
                boolean created = file.createNewFile();
                if (!created) {
                    showAlert("Error", "Failed to create the file.");
                    return;
                }

                String[] cmd = {
                    "x-terminal-emulator", "-e", "bash", "-c",
                    "nano \"" + file.getAbsolutePath() + "\""
                };
                new ProcessBuilder(cmd).start();
            }
        } catch (IOException e) {
            showAlert("Error", "Error creating file: " + e.getMessage());
        }
    });
}
